{"version":3,"file":"js/about.456c0507.js","mappings":"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","sources":["webpack://demo_vue2/./src/views/AboutView.vue","webpack://demo_vue2/src/views/AboutView.vue","webpack://demo_vue2/./src/views/AboutView.vue?9dba","webpack://demo_vue2/./src/views/AboutView.vue?296c","webpack://demo_vue2/./src/utils/util.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"index\"},[_c('ul',_vm._l((_vm.message),function(item,index){return _c('li',{key:index,class:{'rightText': _vm.userId == item.id}},[_vm._v(\" \"+_vm._s(item.msg)+\" - \"+_vm._s(item.times)+\" \")])}),0),_vm._v(\" 页面二 \"),_c('el-input',{attrs:{\"placeholder\":\"请输入内容\"},model:{value:(_vm.input),callback:function ($$v) {_vm.input=$$v},expression:\"input\"}}),(!_vm.ws)?_c('el-button',{attrs:{\"type\":\"info\",\"round\":\"\"},on:{\"click\":_vm.createWs}},[_vm._v(\"开启\"+_vm._s(_vm.isConnet))]):_c('el-button',{attrs:{\"type\":\"warning\",\"round\":\"\"},on:{\"click\":_vm.closeWs}},[_vm._v(\"离开\")]),_c('el-button',{attrs:{\"type\":\"info\",\"round\":\"\"},on:{\"click\":_vm.sendMsg}},[_vm._v(\"信息按钮2\")]),_c('el-button',{attrs:{\"type\":\"warning\",\"round\":\"\"},on:{\"click\":_vm.openMap}},[_vm._v(\"跳转地图\")]),_c('el-button',{attrs:{\"type\":\"warning\",\"round\":\"\"},on:{\"click\":function($event){return _vm.openThree('/threeIndex')}}},[_vm._v(\"跳转three1\")]),_c('el-button',{attrs:{\"type\":\"warning\",\"round\":\"\"},on:{\"click\":function($event){return _vm.openThree('/threeTeo')}}},[_vm._v(\"跳转three2\")]),_c('chatCom')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"index\">\r\n      <ul>\r\n          <li :class=\"{'rightText': userId == item.id}\" v-for=\"(item, index) in message\" :key=\"index\">\r\n              {{ item.msg }} - {{ item.times }}\r\n          </li>\r\n      </ul>\r\n      页面二\r\n      <el-input v-model=\"input\" placeholder=\"请输入内容\"></el-input>\r\n      <el-button type=\"info\" round v-if=\"!ws\" @click=\"createWs\">开启{{ isConnet }}</el-button>\r\n      <el-button type=\"warning\" round v-else @click=\"closeWs\">离开</el-button>\r\n      <el-button type=\"info\" round @click=\"sendMsg\">信息按钮2</el-button>\r\n      <el-button type=\"warning\" round @click=\"openMap\">跳转地图</el-button>\r\n      <el-button type=\"warning\" round @click=\"openThree('/threeIndex')\">跳转three1</el-button>\r\n      <el-button type=\"warning\" round @click=\"openThree('/threeTeo')\">跳转three2</el-button>\r\n\r\n      <chatCom></chatCom>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex';\r\nimport { dateStr } from '@/utils/util'\r\nimport * as USER from '@/store/mutation/mutation-user';\r\n\r\nexport default {\r\n  name: 'indexPage',\r\n  data () {\r\n      return {\r\n          input: '',\r\n          message: [],\r\n          rightTextShow: false,\r\n          userId: '',\r\n          worldMsg: [],\r\n          messageInfo: '',\r\n          ws: null,\r\n          isConnet: false,\r\n          timeout: 2000,\r\n          timeoutObj: null,\r\n      }\r\n  },\r\n  created () {\r\n      this.reqInfo();\r\n      this.reqWorldMsg();\r\n      this.userId = localStorage.getItem('userId');\r\n      // 开启ws\r\n      // this.createWs();\r\n  },\r\n  destroyed () {\r\n      this.closeWs();\r\n  },\r\n  methods: {\r\n      ...mapActions([USER.USERLIST, USER.WORLDMSG]),\r\n      // 跳转地图\r\n      openMap() {\r\n          this.$router.push({\r\n              path: '/MapContainer'\r\n          })\r\n      },\r\n      openThree(url) {\r\n          this.$router.push({\r\n              path: url\r\n          })\r\n      },\r\n      // 获取世界消息\r\n      async reqWorldMsg() {\r\n          const res = await this[USER.WORLDMSG]();\r\n          if(res.code == 200) {\r\n              console.log('msginfo', res)\r\n              // events.sort((a, b) => b.timestamp - a.timestamp);\r\n              let arrMsg = []\r\n\r\n              res.data.forEach((item, index) => {\r\n                  item.msgList.forEach((msg, index) => {\r\n                      arrMsg.push({\r\n                          id: item.userId,\r\n                          msg: msg.msg,\r\n                          times: msg.time\r\n                      })\r\n                  })\r\n              })\r\n\r\n              arrMsg.sort((a, b) => a.times - b.times).map(item => {\r\n                  return item.times = dateStr(item.times);\r\n              });\r\n\r\n              this.message = arrMsg;\r\n              console.log('处理信息', arrMsg)\r\n          }\r\n      },\r\n      // 获取信息\r\n      async reqInfo() {\r\n          // axios.get('http://192.168.2.33:9090/api/user/userList').then((res) => {\r\n          //     console.log('请求1', res.data);\r\n          //     console.log('status',res.status);\r\n          //     console.log('statusText',res.statusText);\r\n          //     console.log('headers',res.headers);\r\n          //     console.log('config',res.config);\r\n          // }).catch((err) => {\r\n          //     console.log(err);\r\n          // }).finally(() => {\r\n          //     console.log('finally');\r\n          // })\r\n          \r\n          // axios({\r\n          //     url: '/api/user/userList',\r\n          //     method: 'get'\r\n          // }).then((res) => {\r\n          //     console.log('请求2', res);\r\n          // })\r\n\r\n          // const res = await axios({url:'/api/user/userList', method: 'get'});\r\n          // console.log('请求3', res, res.code);\r\n\r\n          const res = await this[USER.USERLIST]();\r\n          console.log('请求4', res);\r\n          if(res.code == 200) {\r\n              console.log('请求成功', res);\r\n          }else if(res.code == 401) {\r\n              this.$router.push({name: 'home'});\r\n          }\r\n      },\r\n      // 创建连接\r\n      createWs() {\r\n          try {\r\n              const userId = localStorage.getItem('userId');\r\n              this.ws = new WebSocket('ws://192.168.2.33:9090/socket/ws?userId=' + userId);\r\n              this.initWs();\r\n              this.$notify({\r\n                  title: '开启连接',\r\n              });\r\n          } catch {\r\n              this.$notify({\r\n                  title: '重连失败',\r\n              });\r\n              // 开始重连\r\n              this.reConnect()\r\n          }\r\n      },\r\n      initWs() {\r\n          this.isConnet = true;\r\n          this.ws.onopen = this.wsOnopen;\r\n          this.ws.onmessage = this.wsOnmessage;\r\n          this.ws.onerror = this.wsOnerror;\r\n          this.ws.onclose = this.wsOnclose;\r\n      },\r\n      wsOnopen(event) {\r\n          console.log('连接成功', event);\r\n          this.timeoutObj = setTimeout(() => {\r\n              if(this.isConnet) this.ws.send(JSON.stringify({ type: 'ping' }))\r\n          }, this.timeout);\r\n          this.$message({\r\n              showClose: true,\r\n              message: '连接成功',\r\n              type: 'success'\r\n          });\r\n      },\r\n      wsOnmessage(event) {\r\n          console.log('接收到消息', JSON.parse(event.data));\r\n          if(JSON.parse(event.data).type == 'pong') {\r\n              clearTimeout(this.timeoutObj);\r\n              this.timeoutObj = setTimeout(() => {\r\n                  if(this.isConnet) this.ws.send(JSON.stringify({ type: 'ping' }))\r\n              }, this.timeout);\r\n          } else {\r\n              let msg = JSON.parse(event.data);\r\n              msg.times = dateStr(msg.time);\r\n              this.message.push(msg);\r\n              console.log('收到消息', this.message);\r\n              this.$message({\r\n                  showClose: true,\r\n                  message: '收到消息',\r\n                  type: 'success'\r\n              });\r\n          }\r\n      },\r\n      wsOnerror(event) {\r\n          console.log('连接错误', event);\r\n          this.$message({\r\n              showClose: true,\r\n              message: '连接错误',\r\n              type: 'error'\r\n          });\r\n          this.isConnet = false;\r\n          // 开始重连\r\n          this.reConnect()\r\n      },\r\n      wsOnclose(event) {\r\n          console.log('连接关闭', event);\r\n          this.$message({\r\n              showClose: true,\r\n              message: '连接关闭',\r\n              type: 'warning'\r\n          });\r\n          this.isConnet = false;\r\n      },\r\n      // 断线重连\r\n      reConnect() {\r\n          if(this.isConnet) return;\r\n          this.rec&&clearTimeout(this.rec);\r\n          // 延迟重连，避免多次频繁请求\r\n          this.rec = setTimeout(() => {\r\n              console.log('开始重连');\r\n              this.createWs();\r\n          }, 2000);\r\n      },\r\n      sendMsg() {\r\n          if( !this.ws ) return;\r\n          console.log('发送消息',this.ws, this.ws?.readyState)\r\n          this.messageInfo = this.input;\r\n          let msgObj = {\r\n              time: new Date().getTime(),\r\n              msg: this.input\r\n          }\r\n          if(this.ws?.readyState == WebSocket.OPEN) {\r\n              this.ws?.send(JSON.stringify(msgObj));\r\n          }else{\r\n              this.isConnet = false;\r\n              // 开始重连\r\n              this.reConnect()\r\n          }\r\n      },\r\n      closeWs() {\r\n          this.ws?.close();\r\n          this.ws = null;\r\n          this.timeoutObj = null;\r\n          this.isConnet = false;\r\n          this.$notify({\r\n              title: '成功',\r\n              message: '退出成功',\r\n              type: 'success'\r\n          });\r\n      }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.index {\r\n  .rightText {\r\n      text-align: center;\r\n  }\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AboutView.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AboutView.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AboutView.vue?vue&type=template&id=241aeba4&scoped=true\"\nimport script from \"./AboutView.vue?vue&type=script&lang=js\"\nexport * from \"./AboutView.vue?vue&type=script&lang=js\"\nimport style0 from \"./AboutView.vue?vue&type=style&index=0&id=241aeba4&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"241aeba4\",\n  null\n  \n)\n\nexport default component.exports","/**\r\n *  时间戳 转 y-mm-d HH:m:s\r\n * 输出格式：2021-12-03 14:12:01\r\n * @param  {[type]} date 日期\r\n */\r\nexport function formatDateTime(date) {\r\n    let y = date.getFullYear()\r\n    let m = date.getMonth() + 1\r\n    m = m < 10 ? '0' + m : m\r\n    let d = date.getDate()\r\n    d = d < 10 ? '0' + d : d\r\n    let h = date.getHours()\r\n    h = h < 10 ? '0' + h : h\r\n    let minute = date.getMinutes()\r\n    minute = minute < 10 ? '0' + minute : minute\r\n    let second = date.getSeconds()\r\n    second = second < 10 ? '0' + second : second\r\n    return y + '-' + m + '-' + d + ' ' + h + ':' + minute + ':' + second\r\n}\r\n/**\r\n *  获取某月有多少天\r\n *\r\n * @param  {[type]} date 日期\r\n */\r\n//\r\nexport function getDayByMonth(month) {\r\n    var oDate = new Date()\r\n    var year = oDate.getFullYear()\r\n    var newDate = new Date(year, month - 1, 32)\r\n    var day = 32 - newDate.getDate()\r\n    return day\r\n}\r\n\r\n/*\r\n* 获取UUID\r\n* */\r\nexport function guid() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        // eslint-disable-next-line one-var\r\n        let r = Math.random() * 16 | 0,\r\n            v = c === 'x' ? r : (r & 0x3 | 0x8)\r\n        return v.toString(16)\r\n    })\r\n}\r\n/**\r\n* 违规字符串替换\r\n */\r\nexport function doreplace(newtml, word, nword) {\r\n    newtml = newtml.replace(eval('/(' + word + ')/g'), nword)\r\n    return newtml\r\n}\r\n/**\r\n * 毫秒转换友好的显示格式\r\n * 输出格式：刚刚 / 13分钟前 / 12小时前 / 2天前\r\n * @param  {[type]} date 日期\r\n */\r\nexport function dateStr(date) {\r\n    // 获取js 时间戳\r\n    let time = new Date().getTime()\r\n    // 去掉 js 时间戳后三位\r\n    time = parseInt(time - date) / 1000\r\n    // 存储转换值\r\n    let s\r\n    if (time < 60 * 10) {\r\n        // 十分钟内\r\n        return '刚刚'\r\n    } else if (time < 60 * 60 && time >= 60 * 10) {\r\n        // 超过十分钟少于1小时\r\n        s = Math.floor(time / 60)\r\n        return s + '分钟前'\r\n    } else if (time < 60 * 60 * 24 && time >= 60 * 60) {\r\n        // 超过1小时少于24小时\r\n        s = Math.floor(time / 60 / 60)\r\n        return s + '小时前'\r\n    } else if (time < 60 * 60 * 24 * 3 && time >= 60 * 60 * 24) {\r\n        // 超过1天少于3天内\r\n        s = Math.floor(time / 60 / 60 / 24)\r\n        return s + '天前'\r\n    } else {\r\n        // 超过3天\r\n        date = new Date(date)\r\n        return (\r\n            date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate()\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n* 合并多张图片，返回新的图片\r\n* @param {Array} list 图片url数组\r\n* @param {Number} cwith 画布宽度 默认500\r\n* @param {Number} cheight 画布高度 默认500\r\n*/\r\nexport function mergeImgs(list, cwith = 15, cheight = 15) {\r\n    return new Promise((resolve, reject) => {\r\n        const baseList = []\r\n\r\n        const canvas = document.createElement('canvas')\r\n        let curPx = document.documentElement.style.fontSize\r\n        curPx = parseFloat(curPx.split('px')[0])\r\n        canvas.width = curPx * 4.4\r\n        canvas.height = curPx * 4.4\r\n        const context = canvas.getContext('2d')\r\n\r\n        list.map((item, index) => {\r\n            const img = new Image()\r\n            img.src = item\r\n            // 跨域\r\n            img.crossOrigin = 'Anonymous'\r\n            let row = Math.floor(index / 3)\r\n            let sWith = cwith * (index - 3 * row)\r\n            let sHeight = cheight * row\r\n\r\n            img.onload = () => {\r\n                context.drawImage(img, sWith, sHeight, cwith, cheight)\r\n                const base64 = canvas.toDataURL('image/png')\r\n                baseList.push(base64)\r\n\r\n                if (baseList[list.length - 1]) {\r\n                    // 返回新的图片\r\n                    resolve(baseList[list.length - 1])\r\n                }\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport function scrollEvent(domId, callbackFunc) {\r\n    var dom = document.getElementById(domId)\r\n    var scrollFunc = function (e) {\r\n        var direct = 0\r\n        e = e || window.event\r\n\r\n        if (e.wheelDelta) { // IE/Opera/Chrome\r\n            if (e.wheelDelta > 0) {\r\n                direct = -1\r\n            } else {\r\n                direct = 1\r\n            }\r\n        } else if (e.detail) { // Firefox\r\n            if (e.detail > 0) {\r\n                direct = 1\r\n            } else {\r\n                direct = -1\r\n            }\r\n        }\r\n        if (callbackFunc) {\r\n            callbackFunc(direct)\r\n        }\r\n    }\r\n    /* 注册事件 */\r\n    if (dom.addEventListener) {\r\n        dom.addEventListener('DOMMouseScroll', scrollFunc, false)\r\n    }\r\n    dom.onmousewheel = scrollFunc// IE/Opera/Chrome\r\n}\r\n\r\n/**\r\n * 获取滚动条的位置\r\n */\r\nexport function getScrollTop(id) {\r\n    let scrollPos = document.getElementById(id)\r\n    return scrollPos.scrollTop\r\n}\r\n\r\n/**\r\n * 滚动条到最下方\r\n * @param id 容器id\r\n */\r\nexport function scrollBottom(id, callback) {\r\n    let div = document.getElementById(id)\r\n    if (div) div.scrollTop = div.scrollHeight\r\n    if (callback) callback(div.scrollHeight)\r\n}\r\n\r\nexport const altList = [\r\n    '[生气]',\r\n    '[好奇]',\r\n    '[嘿嘿]',\r\n    '[思考]',\r\n    '[为难]',\r\n    '[哭笑]',\r\n    '[吐血]',\r\n    '[微笑]',\r\n    '[害怕]',\r\n    '[喜欢]',\r\n    '[睁眼]',\r\n    '[酷炫]',\r\n    '[哭泣]',\r\n    '[害羞]',\r\n    '[闭嘴]',\r\n    '[睡觉]',\r\n    '[大哭]',\r\n    '[尴尬]',\r\n    '[嘻嘻]',\r\n    '[超生气]',\r\n    '[哼]',\r\n    '[害]',\r\n    '[粑粑]',\r\n    '[鄙视]',\r\n    '[无语]',\r\n    '[努力]',\r\n    '[鼓掌]',\r\n    '[吓人]',\r\n    '[左哼]',\r\n    '[坏笑]',\r\n    '[疑问 ]',\r\n    '[哈哈]',\r\n    '[略略略]',\r\n    '[吐]',\r\n    '[嘤嘤]',\r\n    '[委屈呀]',\r\n    '[开心]',\r\n    '[打哈欠]',\r\n    '[抠鼻]',\r\n    '[哼哼]',\r\n    '[可爱]',\r\n    '[哭哭]',\r\n    '[惊讶]',\r\n    '[嘘]',\r\n    '[右哼]',\r\n    '[再见]',\r\n    '[嘻嘻嘻]',\r\n    '[亲亲]',\r\n    '[汗]',\r\n    '[吐槽]',\r\n    '[晕]',\r\n    '[想吃]]',\r\n    '[累了]]',\r\n    '[没眼看]',\r\n    '[大鼻孔]',\r\n    '[跳舞]'\r\n]\r\n/**\r\n * gif图\r\n * @param id 容器id\r\n */\r\nexport let faceUtils = {\r\n    faces: () => {\r\n        let arr = {}\r\n        for (let i = 0; i < altList.length; i++) {\r\n            arr[altList[i]] = './static/face/' + i + '.gif'\r\n        }\r\n        return arr\r\n    }\r\n}\r\n\r\n// 转义\r\nexport function transform(content) {\r\n    // 支持的html标签\r\n    let html = function (end) {\r\n        return new RegExp(\r\n            '\\\\n*\\\\[' +\r\n            (end || '') +\r\n            '(code|pre|div|span|p|table|thead|th|tbody|tr|td|ul|li|ol|li|dl|dt|dd|h2|h3|h4|h5)([\\\\s\\\\S]*?)]\\\\n*',\r\n            'g'\r\n        )\r\n    }\r\n    let fa = faceUtils.faces()\r\n    if (content) {\r\n        content = content\r\n            .replace(/&(?!#?[a-zA-Z0-9]+;)/g, '&amp;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;')\r\n            .replace(/'/g, '&#39;')\r\n            .replace(/\"/g, '&quot;') // XSS\r\n            .replace(/@(\\S+)(\\s+?|$)/g, '@<a href=\"javascript:;\">$1</a>$2')\r\n\r\n            .replace(/face\\[([^\\s\\\\[\\]]+?)]/g, function (face) {\r\n                // 转义表情\r\n                let alt = face.replace(/^face/g, '')\r\n                return (\r\n                    '<img alt=\"' +\r\n                    fa[alt] +\r\n                    '\" title=\"' +\r\n                    fa[alt] +\r\n                    '\" src=\"' +\r\n                    fa[alt] +\r\n                    '\">'\r\n                )\r\n            })\r\n            .replace(/img\\[([^\\s]+?)]/g, function (img) {\r\n                // 转义图片\r\n                let href = img.replace(/(^img\\[)|(]$)/g, '')\r\n                return (\r\n                    '<img class=\"message-img\" src=\"' + href + '\" alt=\"消息图片不能加载\">'\r\n                )\r\n            })\r\n            .replace(/file\\([\\s\\S]+?\\)\\[[\\s\\S]*?]/g, function (str) {\r\n                // 转义文件\r\n                let href = (str.match(/file\\(([\\s\\S]+?)\\)\\[/) || [])[1]\r\n                let text = (str.match(/\\)\\[([\\s\\S]*?)]/) || [])[1]\r\n                if (!href) return str\r\n                return (\r\n                    '<a class=\"message-file\" href=\"' +\r\n                    href +\r\n                    '\"><i class=\"ivu-icon ivu-icon-md-arrow-down\"></i>' +\r\n                    (text || href) +\r\n                    '</a>'\r\n                )\r\n            })\r\n            .replace(/audio\\[([^\\s]+?)]/g, function (audio) {\r\n                // 转义音频\r\n                return (\r\n                    '<div class=\"message-audio\" data-src=\"' +\r\n                    audio.replace(/(^audio\\[)|(]$)/g, '') +\r\n                    '\"><i class=\"layui-icon\">&#xe652;</i><p>音频消息</p></div>'\r\n                )\r\n            })\r\n            .replace(/video\\[([^\\s]+?)]/g, function (video) {\r\n                // 转义音频\r\n                return (\r\n                    '<div class=\"message-video\"  data-src=\"' +\r\n                    video.replace(/(^video\\[)|(]$)/g, '') +\r\n                    '\"><i class=\"layui-icon\">&#xe652;</i></div>'\r\n                )\r\n            })\r\n            .replace(/a\\([\\s\\S]+?\\)\\[[\\s\\S]*?]/g, function (str) {\r\n                // 转义链接\r\n                let href = (str.match(/a\\(([\\s\\S]+?)\\)\\[/) || [])[1]\r\n                let text = (str.match(/\\)\\[([\\s\\S]*?)]/) || [])[1]\r\n                if (!href) return str\r\n                return (\r\n                    '<a href=\"' + href + '\" target=\"_blank\">' + (text || href) + '</a>'\r\n                )\r\n            })\r\n            .replace(html(), '<$1 $2>')\r\n            .replace(html('/'), '</$1>') // 转移HTML代码\r\n            .replace(/\\n/g, '<br>') // 转义换行\r\n    }\r\n    return content\r\n}\r\n\r\nexport function bSort(arr, flig) {\r\n    var len = arr.length\r\n    for (var i = 0; i < len - 1; i++) {\r\n        for (var j = 0; j < len - 1 - i; j++) {\r\n            if (arr[j][flig] < arr[j + 1][flig]) {\r\n                var temp = arr[j]\r\n                arr[j] = arr[j + 1]\r\n                arr[j + 1] = temp\r\n            }\r\n        }\r\n    }\r\n    return arr\r\n}\r\n\r\nexport function getArrDifference(arr1, arr2) {\r\n    return arr1.concat(arr2).filter(function (v, i, arr) {\r\n        return arr.indexOf(v) === arr.lastIndexOf(v)\r\n    })\r\n}\r\n\r\nlet timeout = null\r\nexport function delayFun(fn, dey) {\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(() => {\r\n        fn()\r\n    }, dey)\r\n}\r\n\r\n// 字符串转数字\r\nexport function strToNum(str) {\r\n    let quantityList = str.split(',')\r\n    if (quantityList.length > 0) {\r\n        let curQuantity = ''\r\n        quantityList.forEach(x => {\r\n            curQuantity += x\r\n        })\r\n        return curQuantity\r\n    }\r\n    return 0\r\n}\r\n\r\n// 字符串数组去重\r\nexport function unique(arr) {\r\n    return arr.filter(function (ele, index, array) {\r\n        return array.indexOf(ele) === index\r\n    })\r\n}\r\n\r\n// 1000转1K 1000000转1M\r\nexport function addChineseUnit(number, digits) {\r\n    digits = digits == null ? 2 : digits\r\n    const si = [\r\n        { value: 1, symbol: '' },\r\n        { value: 1E3, symbol: 'K' },\r\n        { value: 1E6, symbol: 'M' },\r\n        { value: 1E9, symbol: 'B' },\r\n        { value: 1E12, symbol: 'T' },\r\n        { value: 1E15, symbol: 'P' },\r\n        { value: 1E18, symbol: 'E' }\r\n    ]\r\n    const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/\r\n    let i\r\n    for (i = si.length - 1; i > 0; i--) {\r\n        if (number >= si[i].value) {\r\n            break\r\n        }\r\n    }\r\n    if (number < 1000) {\r\n        return Number(number).toFixed(digits)\r\n    }\r\n    let a = (number / si[i].value).toFixed(digits).replace(rx, '$1') + si[i].symbol\r\n    return a\r\n}\r\n\r\n// 整数逢三','\r\nexport function NumFormat(value) {\r\n    let intPart = Number(value)\r\n    let intPartFormat = intPart.toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,')\r\n    return intPartFormat\r\n}\r\n\r\n// 判断字符串为空\r\nexport function isNull(str) {\r\n    if (str === '') return true\r\n    var regu = '^[ ]+$'\r\n    var re = new RegExp(regu)\r\n    return re.test(str)\r\n}\r\nexport function isvalidPhone(str) { // 手机号校验\r\n    const reg = /^1[3|4|5|7|8][0-9]\\d{8}$/\r\n    return reg.test(str)\r\n}\r\n\r\nexport function isPassword(str) { // 密码校验\r\n    const reg = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,24}$/\r\n    return reg.test(str)\r\n}\r\n"],"names":["render","_vm","this","_c","_self","staticClass","_l","message","item","index","key","class","userId","id","_v","_s","msg","times","attrs","model","value","input","callback","$$v","expression","ws","on","closeWs","createWs","isConnet","sendMsg","openMap","$event","openThree","staticRenderFns","name","data","rightTextShow","worldMsg","messageInfo","timeout","timeoutObj","created","reqInfo","reqWorldMsg","localStorage","getItem","destroyed","methods","mapActions","USER","$router","push","path","url","res","code","console","log","arrMsg","forEach","msgList","time","sort","a","b","map","dateStr","WebSocket","initWs","$notify","title","reConnect","onopen","wsOnopen","onmessage","wsOnmessage","onerror","wsOnerror","onclose","wsOnclose","event","setTimeout","send","JSON","stringify","type","$message","showClose","parse","clearTimeout","rec","readyState","msgObj","Date","getTime","OPEN","close","component","formatDateTime","date","y","getFullYear","m","getMonth","d","getDate","h","getHours","minute","getMinutes","second","getSeconds","getDayByMonth","month","oDate","year","newDate","day","guid","replace","c","r","Math","random","v","toString","doreplace","newtml","word","nword","eval","s","parseInt","floor","mergeImgs","list","cwith","cheight","Promise","resolve","reject","baseList","canvas","document","createElement","curPx","documentElement","style","fontSize","parseFloat","split","width","height","context","getContext","img","Image","src","crossOrigin","row","sWith","sHeight","onload","drawImage","base64","toDataURL","length","scrollEvent","domId","callbackFunc","dom","getElementById","scrollFunc","e","direct","window","wheelDelta","detail","addEventListener","onmousewheel","getScrollTop","scrollPos","scrollTop","scrollBottom","div","scrollHeight","altList","faceUtils","faces","arr","i","transform","content","html","end","RegExp","fa","face","alt","href","str","match","text","audio","video","bSort","flig","len","j","temp","getArrDifference","arr1","arr2","concat","filter","indexOf","lastIndexOf","delayFun","fn","dey","strToNum","quantityList","curQuantity","x","unique","ele","array","addChineseUnit","number","digits","si","symbol","rx","Number","toFixed","NumFormat","intPart","intPartFormat","isNull","regu","re","test","isvalidPhone","reg","isPassword"],"sourceRoot":""}